version: 2.1
orbs:
  node: circleci/node@4.1.0

jobs:
  build-and-lint:
    executor:
      name: node/default
      tag: '14.15'
    steps:
      - checkout
      - node/install-packages
      - run: npm audit
      - run: npm run build:dryrun
      - run: npm run lint

  unit:
    executor:
      name: node/default
      tag: '14.15'
    steps:
      - checkout
      - node/install-packages
      - run: npm run test:unit

  coverage:
    docker:
      - image: circleci/node:14
        environment:
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: postgres123
          PG_DB: postgres
          PG_PORT: 5432
      - image: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run: npm run build && npm run migration:run
      - run: npm run coverage

  deploy:
    machine: true
    steps:
      - checkout
      # start proprietary DB using private Docker image
      # with credentials stored in the UI
      - run: |
          docker login --username $DOCKER_USER -p $DOCKER_ACCESS_TOKEN

      # build the application image
      - run: docker build -t amanzanero/cronnouncer-bot:latest .
      #$CIRCLE_BRANCH .

      # deploy the image
      - run: docker push amanzanero/cronnouncer --all-tags
      - add_ssh_keys
      - run: |
          ssh root@142.93.89.49 './cronnouncer/deploy.sh'

workflows:
  cronnouncer-ci:
    jobs:
      - build-and-lint
      - unit:
          requires:
            - build-and-lint
#      - coverage:
#          requires:
#            - unit
      - deployhold:
          type: approval
          requires:
            - unit
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - deployhold
          filters:
            branches:
              only:
                - main
